name: Prebuild

on:
  push:

env:
  NAPI_VERSION: 8
  BINDING_NAME: porla_libtorrent

jobs:
  build:
    name: Build ${{ matrix.arch }} on ${{ matrix.os }} ${{ matrix.libc }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          # macos
          - os: macos-11
            arch: arm64
            is-native: false
          - os: macos-10.15
            arch: x64
            is-native: true

          # linux
          - os: ubuntu-18.04
            arch: x64
            is-native: true

          # linux-libc
          - os: ubuntu-latest
            arch: arm64
            is-native: false
            docker-arch: linux/arm64
            docker-image: node:16-buster
          - os: ubuntu-latest
            arch: arm
            is-native: false
            docker-arch: linux/arm/v7
            docker-image: node:16-buster

          # linux-musl
          - os: ubuntu-latest
            arch: x64
            is-native: false
            docker-arch: linux/amd64
            docker-image: node:16-alpine
            libc: musl

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Use Node.js 16.x
        uses: actions/setup-node@v1
        with:
          node-version: 16.x

      - name: Rebuild
        if: ${{ !matrix.docker-arch }}
        shell: bash
        run: |
          npm i
          npm run configure
          npm run build --arch=${{ matrix.arch }}
        env:
          npm_config_build_from_source: true

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        if: matrix.docker-arch

      - name: Rebuild (in docker)
        uses: addnab/docker-run-action@v3
        if: matrix.docker-arch
        with:
          image: ${{ matrix.docker-image }}
          # shell: bash
          options: --platform=${{ matrix.docker-arch }} -v ${{ github.workspace }}:/work -e CI=1 -e npm_config_build_from_source=1 -e NAPI_VERSION -e BINDING_NAME
          run: |
            if command -v apt-get &> /dev/null
            then
              apt-get update
              apt-get install -y cmake
            elif command -v apk &> /dev/null
            then
              apk update
              apk add cmake make g++ gcc
            fi
            cd /work
            npm i
            npm run configure
            npm run build

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ runner.os }}-${{ matrix.arch }}-${{ matrix.libc }}-prebuilds
          path: prebuilds
          retention-days: 1